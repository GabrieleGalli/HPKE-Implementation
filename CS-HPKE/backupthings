stream.write(&ek_data_packet_byte).unwrap();
println!("ek inviata");

match stream.read(&mut received) {
    Ok(_) => {
        if received == [0] {
            println!("il server ha ricevuto la ek")
        }
    },
    Err(e) => {
        println!("Fallimento nel ricevere dati: {}", e);
        return;
    }
}

stream.write(&ct_data_packet_byte).unwrap();
println!("ct inviato");

match stream.read(&mut received) {
    Ok(_) => {
        if received == [0] {
            println!("il server ha ricevuto la ek")
        }
    },
    Err(e) => {
        println!("Fallimento nel ricevere dati: {}", e);
        return;
    }
}


// RICEZIONE DI PACCHETTI DAL SERVER

println!("Arrivata EncappedKey");
display_data(&data);
stream.write(mex)?;
fill_vec(&mut ek, &data);
display_vec(&ek)

println!("Arrivato Ciphertext");
display_data(&data);
stream.write(mex)?;
fill_vec(&mut ct, &data);
display_vec(&ct)

println!("Arrivato AssociatedData");
display_data(&data);            
stream.write(mex)?;
fill_vec(&mut ad, &data);
display_vec(&ad)

println!("Arrivato Tag");
display_data(&data);
stream.write(mex)?;
fill_vec(&mut tb, &data);
display_vec(&tb)